name: CI/CD pipeline
on:
 workflow_dispatch:
    branches: ["master"]
 pull_request:
    branches: ["master"]

jobs:
 build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x' # Specify the .NET version you are using
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Run unit tests
        run: dotnet test --filter FullyQualifiedName~prac6_1000.Tests.UnitTestPage3.OnPost_UpdatesTicketStatus_Successfully --no-build --verbosity normal
      - name: Run unit tests
        run: dotnet test --filter FullyQualifiedName~prac6_1000.Tests.UnitTestPage4.OnPost_UpdatesTicketStatusToCancelled_Successfully --no-build --verbosity normal
      - name: Run unit tests
        run: dotnet test --filter FullyQualifiedName~prac6_1000.Tests.UnitTestPage5.OnPost_UpdatesClientIdForTicket_Successfullyy --no-build --verbosity normal
      - name: Run component tests
        run: dotnet test --filter FullyQualifiedName~prac6_1000.Tests.Page3ModelComponentTests.UpdateStatusToDone_DisplaysSuccessMessage --no-build --verbosity normal
      - name: Run component tests
        run: dotnet test --filter FullyQualifiedName~prac6_1000.Tests.Page4ModelComponentTests.UpdateStatusToCancelled_DisplaysSuccessMessage --no-build --verbosity normal
      - name: Run component tests
        run: dotnet test --filter FullyQualifiedName~prac6_1000.Tests.Page5ModelComponentTests.AssignClientToTicket_DisplaysSuccessMessage --no-build --verbosity normal
        # Repeat the above step for Page4ModelComponentTests and Page5ModelComponentTests, adjusting the filter accordingly

 build-and-push-to-yc:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build docker image
        run: docker build ./prac6_1000/prac6_1000 --tag cr.yandex/${{secrets.YC_REGISTRY_ID}}/prac6_1000:latest
      - name: Login to YC Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_KEYS }}
      - name: Push tag to YC Registry
        run: docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/prac6_1000:latest

 deploy:
    name: Deploy
    needs: [build-and-push-to-yc]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy serverless container
        uses: yc-actions/yc-sls-container-deploy@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
          container-name: ${{ secrets.YC_CONTAINER_NAME }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/prac6_1000:latest
          revision-service-account-id: ${{ secrets.YC_SA_ID }}
